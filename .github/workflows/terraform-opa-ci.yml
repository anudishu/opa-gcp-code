name: Terraform OPA CI

on:
  push:
    branches:
      - main
      - master

jobs:
  terraform-opa:
    runs-on: ubuntu-latest

    steps:
      - name: üõí Checkout code
        uses: actions/checkout@v4

      - name: üîê Write GCP credentials
        run: echo '${{ secrets.SA }}' > key.json

      - name: üß± Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: üõ°Ô∏è Install OPA and jq
        run: |
          sudo wget -O /usr/local/bin/opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64_static
          sudo chmod +x /usr/local/bin/opa
          sudo apt-get update && sudo apt-get install -y jq

      - name: Terraform Init
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/key.json
        run: terraform init -input=false

      - name: Terraform Plan
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/key.json
        run: terraform plan -out=tfplan

      - name: üßæ Generate JSON plan
        run: terraform show -json tfplan > tfplan.json

      - name: üîç OPA Policy Check
        id: opa_check
        run: |
          echo "üîç Running OPA Policy Check..."
          result=$(opa eval -d policy.rego -i tfplan.json "data.terraform.gcp.deny" | jq -r '.result[0].expressions[0].value | @json')
          if [ "$result" != "[]" ] && [ "$result" != "null" ]; then
            echo "‚ùå OPA Policy Violations Detected:"
            echo "$result"
            exit 1 
          else 
            echo "‚úÖ OPA Policy Passed: No violations found."
          fi
      - name: Terraform Apply
        if: steps.opa_check.outcome == 'success'
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/key.json
        run: terraform apply -auto-approve tfplan

          